# Generated by Django 4.2.5 on 2023-10-01 23:36

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CategoricalIndicators",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("category", models.TextField()),
            ],
            options={
                "db_table": "categorical_indicators",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CensusTracts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("statefp", models.TextField(blank=True, null=True)),
                ("countyfp", models.TextField(blank=True, null=True)),
                ("tractce", models.TextField(blank=True, null=True)),
                ("affgeoid", models.TextField(blank=True, null=True)),
                ("geoid", models.TextField(unique=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("namelsad", models.TextField(blank=True, null=True)),
                ("stusps", models.TextField(blank=True, null=True)),
                ("county_name", models.TextField(blank=True, null=True)),
                ("state_name", models.TextField(blank=True, null=True)),
                ("lsad", models.TextField(blank=True, null=True)),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.GeometryField(srid=4326),
                ),
            ],
            options={
                "db_table": "census_tracts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Indicators",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("indicator_id", models.TextField(unique=True)),
                ("description", models.TextField()),
                ("indicator", models.TextField()),
                ("category", models.TextField()),
                ("type", models.TextField()),
                ("measure", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "indicators",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Menus",
            fields=[
                ("menu_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("establishment_id", models.TextField()),
                ("menu", models.TextField(blank=True, null=True)),
                ("cluster", models.BigIntegerField(blank=True, null=True)),
                ("rrr", models.FloatField()),
                ("rrr_upper_ci", models.FloatField(blank=True, null=True)),
                ("rrr_lower_ci", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "menus",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NumericalIndicators",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("value", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "numerical_indicators",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Restaurants",
            fields=[
                ("establishment_id", models.TextField(unique=True)),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("rrr_mean", models.FloatField(blank=True, null=True)),
                ("rrr_max", models.FloatField(blank=True, null=True)),
                ("rrr_min", models.FloatField(blank=True, null=True)),
                ("rrr_std", models.FloatField(blank=True, null=True)),
                ("tract_id", models.TextField(blank=True, null=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "restaurants",
                "managed": False,
            },
        ),
    ]
